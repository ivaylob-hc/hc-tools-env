#!/usr/bin/env bash
#%# ###########################################################################
#%#
#%#   Name: hc-tools-env
#%#   Author: Ivaylo Bahchevanov
#%#   Description: It makes it easier to manage your local versions of Hashicorp tools
#%#
#%# ###########################################################################

# ---------------------------
# Settings

VERSION="0.1.0"
SCRIPT_NAME=$(basename $0)

BIN_DIR=${BIN_DIR:-${HOME}/.local/bin}
TMP_DIR=${TMP_DIR:-/tmp}

HC_BASE_URL="https://releases.hashicorp.com"
SUPPORTED_TOOLS="terraform|packer|vault|nomad|consul"

OS_NAME=$(uname -s | awk '{print tolower($0)}')

# Display errors in console
if [[ ${1} == '-e' ]] ; then
	SUPPRESS_ERRORS=''
	shift
else
	SUPPRESS_ERRORS='2>/dev/null'
fi

# ---------------------------
# Functions

help() {
	echo "
Usage:
	${SCRIPT_NAME} <action> <tool> <params>
	${SCRIPT_NAME} <use|install|use|versions> <${SUPPORTED_TOOLS}> <remote [number]>

Examples:
	${SCRIPT_NAME} use terraform-<version>
	${SCRIPT_NAME} install terraform-<version>
	${SCRIPT_NAME} list terraform
	${SCRIPT_NAME} list terraform remote <number>
	${SCRIPT_NAME} version
	"
}

# Create binary location directory if not exist
set_local_bin() {
	[[ -d ${BIN_DIR} ]] && return
	echo "Default binary location ${BIN_DIR} does not exist."
	echo "Creating ${BIN_DIR} ..."
	mkdir -p ${BIN_DIR}
	echo "Please add ${BIN_DIR} to the PATH"
}

get_arch_name() {
	case $(uname -m) in
	  x86_64) ARCH_NAME='amd64' ;;
	  x86_32) ARCH_NAME='386'   ;;
	       *) ARCH_NAME=$(uname -m | awk '{print tolower($0)}')  ;;
	esac
}

# Actions
use() {
	if [[ -x ${BIN_DIR}/${1} ]] ; then
		cd ${BIN_DIR}
		ln -sf ${1} ${1%-*}
		# display current version after set
		echo -n "Using "
		${BIN_DIR}/${1%-*} 'version'
	else
		echo "Unavailable local version ${1%-*} of ${1#*-}"
		install $@
	fi
}

install() {
	# Validate input arguments
	[[ ${1##*-} =~ ^[0-9] ]] || eval 'echo "Missing tool version: ${1}"; exit 1'

	# check whether the tool is supported tools
	if [[ $(echo ${1} | egrep -c ${SUPPORTED_TOOLS}) -gt 0 ]] ; then
		ZIPFILE="${1/-/_}_${OS_NAME}_${ARCH_NAME}.zip"

		URL="${HC_BASE_URL}/${1%-*}/${1#*-}/${ZIPFILE}"
		echo "Downloading ${URL}"

		# download and unzip tool in temporary folder
		# \curl ${URL} | bsdtar -xf- -C ${TMP_DIR} || eval 'echo "Failed to download ${URL}"; exit 1'
		cd ${TMP_DIR} || eval 'echo "[error]: Temporary folder ${TMP_DIR} is not accessible."'
		\curl -O ${URL}
		unzip "${ZIPFILE}"
		# cleanup
		rm -f "${ZIPFILE}"

		# unzipped tool is without version. move the tool in bin folder and append version in the name
		mv ${1%-*} ${BIN_DIR}/${1}
		chmod +x ${BIN_DIR}/${1}

		# Set downloaded version as default
		use ${1}
	else
		echo "Error: Unsupported tool"
		help
	fi
}

list() {
	LENGHT=${3:-20}

	case ${2} in
		remote)
			# list versions on HashiCorp site
			\curl ${HC_BASE_URL}/${1}/ ${SUPPRESS_ERRORS} | grep "<a href=\"/${1}/" | awk -F'/' '{print $3}' | grep -v "[0-9][-+][a-z]" | sort -V -r | head -${LENGHT}
			;;
		*)
			# list locally installed versions
			ls -1 ${BIN_DIR}/${1}-[0-9]*.* | awk -F"${2}-" '{print $2}' | sort -V -r
			;;
	esac
}

version() {
	printf "%-16s" "$(basename $0)"
	printf "%s\n" "${VERSION}"

	# display current default versions of locally installed tools
	ls -l ${BIN_DIR} | grep '^l' | egrep "${SUPPORTED_TOOLS}" | awk -F'->' '{print $2}' | while read tool
	do
		printf "%-16s" "${tool%-*}"
		printf "%s\n" "${tool#*-}"
	done
}

# ---------------------------
#   SCRIPT STARTS FROM HERE
# ---------------------------
# Main
get_arch_name
set_local_bin

eval $@ ${SUPPRESS_ERRORS} || help
