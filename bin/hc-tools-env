#!/usr/bin/env bash
#%# ###########################################################################
#%#
#%#   Name: hc-tools-env
#%#   Author: Ivaylo Bahchevanov
#%#   Description: It makes it easier to manage your local versions of Hashicorp tools
#%#
#%# ###########################################################################

# ---------------------------
# Settings

VERSION="1.0.0"
BIN_DIR=${BIN_DIR:-${HOME}/.local/bin}
TMP_DIR=${TMP_DIR:-/tmp}
HC_BASE_URL="https://releases.hashicorp.com"
SUPPORTED_TOOLS="terraform|packer|vault|nomad|consul"
OS_NAME=$(uname -s | awk '{print tolower($0)}')


# Display errors in console
if [[ ${1} == '-e' ]] ; then
	SUPPRESS_ERRORS=''
	shift
else
	SUPPRESS_ERRORS='2>/dev/null'
fi

# ---------------------------
# Functions

help() {
	echo '
Usage:
	hc-tools-env <action> <tool> <params>
	hc-tools-env <use|install|use|versions> <terraform|packer|vault|nomad|consul> <remote [number]>

Examples:
	hc-tools-env use terraform-<version>
	hc-tools-env install terraform-<version>
	hc-tools-env list terraform
	hc-tools-env list terraform remote <number>
	hc-tools-env version
	'
}

# Create binary location directory if not exist
set_local_bin() {
	[[ -d ${BIN_DIR} ]] && return
	echo "Default binary location ${BIN_DIR} does not exist."
	echo "Creating ${BIN_DIR} ..."
	mkdir -p ${BIN_DIR}
	echo "Please add ${BIN_DIR} to the PATH"
}

get_platform() {
	case $(uname -m) in
	  x86_64)
	    PLATFORM='amd64' ;;
	  x86_32)
	    PLATFORM='386'   ;;
	  arm*)
	    PLATFORM='arm'   ;;
	  *)
		echo "Unsupported platform"
		exit 1
	esac
}

# Actions
use() {
	if [[ -x ${BIN_DIR}/${1} ]] ; then
		cd ${BIN_DIR}
		ln -sf ${1} ${1%-*}
		# display current version after set
		${BIN_DIR}/${1%-*} 'version'
	else
		echo "Unavailable local version ${1%-*} of ${1#*-}"
		install $@
	fi
}

install() {
	# check whether the tool is supported tools
	if [[ $(echo ${1} | egrep -c ${SUPPORTED_TOOLS}) -gt 0 ]] ; then
		URL="${HC_BASE_URL}/${1%-*}/${1#*-}/${1/-/_}_${OS_NAME}_${PLATFORM}.zip"
		echo "Downloading ${URL}"

		# download and unzip tool in temporary folder
		\curl ${URL} | bsdtar -xf- -C ${TMP_DIR} || eval 'echo "Failed to download ${URL}"; exit 1'
		# unzipped tool is without version. move the tool in bin folder and append version in the name
		mv ${TMP_DIR}/${1%-*} ${BIN_DIR}/${1}
		chmod +x ${BIN_DIR}/${1}

		# Set downloaded version as default
		echo "Using ${1}"
		use ${1}
	else
		echo "Error: Unsupported tool"
		help
	fi
}

list() {
	LENGHT=${3:-20}

	case ${2} in
		remote)
			# list versions on HashiCorp site
			\curl ${HC_BASE_URL}/${1}/ ${SUPPRESS_ERRORS} | grep "<a href=\"/${1}/" | awk -F'/' '{print $3}' | grep -v "[0-9][-+][a-z]" | sort -V -r | head -${LENGHT}
			;;
		*)
			# list locally installed versions
			ls -1 ${BIN_DIR}/${1}-[0-9]*.* | awk -F"${2}-" '{print $2}' | sort -V -r
			;;
	esac
}

version() {
	printf "%-16s" "$(basename $0)"
	printf "%s\n" "${VERSION}"

	# display current default versions of locally installed tools
	ls -l ${BIN_DIR} | grep '^l' | egrep "terraform|packer|vault|nomad|consul" | awk -F'->' '{print $2}' | while read tool
	do
		printf "%-16s" "${tool%-*}"
		printf "%s\n" "${tool#*-}"
	done
}

# ---------------------------
# Main
case $(uname -m) in
  x86_64)
    PLATFORM='amd64' ;;
  x86_32)
    PLATFORM='386'   ;;
  arm*)
    PLATFORM='arm'   ;;
  *)
	echo "Unsupported platform"
	exit 1
esac

set_local_bin

eval $@ ${SUPPRESS_ERRORS} || help

